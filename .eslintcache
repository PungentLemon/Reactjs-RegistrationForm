[{"S:\\coding\\form\\src\\index.js":"1","S:\\coding\\form\\src\\App.js":"2","S:\\coding\\form\\src\\Form.js":"3","S:\\coding\\form\\src\\FormSignup.js":"4","S:\\coding\\form\\src\\useForm.js":"5","S:\\coding\\form\\src\\validateInfo.js":"6","S:\\coding\\form\\src\\FormSuccess.js":"7"},{"size":199,"mtime":1606890670533,"results":"8","hashOfConfig":"9"},{"size":155,"mtime":1606894457959,"results":"10","hashOfConfig":"9"},{"size":719,"mtime":1607063165391,"results":"11","hashOfConfig":"9"},{"size":3051,"mtime":1607002444157,"results":"12","hashOfConfig":"9"},{"size":872,"mtime":1607060891587,"results":"13","hashOfConfig":"9"},{"size":850,"mtime":1607001706263,"results":"14","hashOfConfig":"9"},{"size":338,"mtime":1607063149611,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1v02lcb",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"18"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"18"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"S:\\coding\\form\\src\\index.js",[],["34","35"],"S:\\coding\\form\\src\\App.js",[],"S:\\coding\\form\\src\\Form.js",[],"S:\\coding\\form\\src\\FormSignup.js",["36"],"import React from 'react'\r\nimport useForm from './useForm'\r\nimport validate from './validateInfo'\r\nimport './Form.css'\r\n\r\nconst FormSignup = ({submitForm}) => {\r\n    const {values,handleChange,errors,handleSubmit}=\r\n    useForm(\r\n        submitForm,\r\n        validate\r\n        )\r\n    return (\r\n        <div className='form-content-right'>\r\n           <form className='form' onSubmit={handleSubmit}>\r\n               <h1>Get started with us today!</h1>\r\n               <div className='form-inputs'>\r\n                   <label htmlFor='username' className='form-label'>Username</label>\r\n                   <input \r\n                   id='username'\r\n                   type='text' \r\n                   name='username'  \r\n                   className='form-input' \r\n                   placeholder='Enter your username'\r\n                   value={values.username}\r\n                   onChange={handleChange}\r\n                   />\r\n                   {errors.username && <p>{errors.username}</p>}\r\n               </div>\r\n               <div className='form-inputs'>\r\n                   <label htmlFor='email' className='form-label'>Email</label>\r\n                   <input \r\n                   id='email'\r\n                   type='email' \r\n                   name='email' \r\n                   className='form-input' \r\n                   placeholder='Enter your email'\r\n                   value={values.email}\r\n                   onChange={handleChange}\r\n                   />\r\n                   {errors.email && <p>{errors.email}</p>}\r\n\r\n               </div>\r\n               <div className='form-inputs'>\r\n                   <label htmlFor='password' className='form-label'>Password</label>\r\n                   <input \r\n                   id='password'\r\n                   type='password' \r\n                   name='password' \r\n                   className='form-input' \r\n                   placeholder='Enter your password'\r\n                   value={values.password}\r\n                   onChange={handleChange}\r\n                   />\r\n                   {errors.password && <p>{errors.password}</p>}\r\n\r\n               </div>\r\n               <div className='form-inputs'>\r\n                   <label htmlFor='confirmPassword' className='form-label'>Confirm Password</label>\r\n                   <input \r\n                   id='confirmPassword'\r\n                   type='password' \r\n                   name='confirmPassword' \r\n                   className='form-input' \r\n                   placeholder='Enter your confirmPassword'\r\n                   value={values.confirmPassword}\r\n                   onChange={handleChange}\r\n                   />\r\n                   {errors.confirmPassword && <p>{errors.confirmPassword}</p>}\r\n\r\n               </div>\r\n               <button className='form-input-btn' type='submit'>Sign Up</button>\r\n               <span className='form-input-login'>Already have an account?\r\n               Login <a href='#'>here</a>\r\n               </span>\r\n           </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FormSignup\r\n\r\n","S:\\coding\\form\\src\\useForm.js",["37","38"],"import {useState,useEffect} from 'react'\r\nimport validate from './validateInfo'\r\n\r\nconst useForm=(callback, validate)=>{\r\n    const[values,setValues]=useState({\r\n        username:'',\r\n        email:'',\r\n        password:'',\r\n        confirmPassword:''\r\n    })\r\n\r\n    const [errors,setErrors]=useState({})\r\n    const [isSubmitting,setisSubmitting]=useState(false)\r\n\r\n    const handleChange=(e)=>{\r\n        setValues({\r\n            ...values,\r\n            [e.target.name]:e.target.value\r\n        })\r\n    }\r\n\r\n    const handleSubmit=(e)=>{\r\n        e.preventDefault()\r\n        setErrors(validate(values))\r\n        setisSubmitting(true)\r\n    }\r\n\r\n    useEffect(()=>{\r\n        if(Object.keys(errors).length===0 && isSubmitting){\r\n            callback()\r\n        }\r\n    },\r\n    [errors]\r\n    )\r\n\r\n    return {values,handleChange,errors,handleSubmit}\r\n}\r\n\r\nexport default useForm","S:\\coding\\form\\src\\validateInfo.js",["39","40","41","42","43"],"import React from 'react'\r\n\r\nconst validate= (values) => {\r\n    let errors={}\r\n\r\n    if(!values.username.trim()){\r\n        errors.username=\"Username requiured\"\r\n    }\r\n\r\n    if(!values.email){\r\n        errors.email='Email required'\r\n    } else if(!/^([a-zA-Z0-9_\\.\\-])+\\@(([a-zA-Z0-9\\-])+\\.)+([a-zA-Z0-9]{2,4})+$/i.test(values.email)){\r\n        errors.email=\"Email address is invalid\"\r\n    }\r\n\r\n    if(!values.password){\r\n        errors.password='Password is required'\r\n    }else if (values.password.length<6){\r\n        errors.password='Pasword needs to be 6 character or more'\r\n    }\r\n\r\n    if (!values.confirmPassword){\r\n        errors.confirmPassword='Password is required'\r\n    } else if(values.password!==values.confirmPassword){\r\n        errors.confirmPassword='Password do not match'\r\n    }\r\n\r\n    return errors\r\n}\r\n\r\nexport default validate\r\n","S:\\coding\\form\\src\\FormSuccess.js",[],{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","severity":1,"message":"49","line":73,"column":22,"nodeType":"50","endLine":73,"endColumn":34},{"ruleId":"51","severity":1,"message":"52","line":2,"column":8,"nodeType":"53","messageId":"54","endLine":2,"endColumn":16},{"ruleId":"55","severity":1,"message":"56","line":33,"column":5,"nodeType":"57","endLine":33,"endColumn":13,"suggestions":"58"},{"ruleId":"51","severity":1,"message":"59","line":1,"column":8,"nodeType":"53","messageId":"54","endLine":1,"endColumn":13},{"ruleId":"60","severity":1,"message":"61","line":12,"column":30,"nodeType":"62","messageId":"63","endLine":12,"endColumn":31,"suggestions":"64"},{"ruleId":"60","severity":1,"message":"65","line":12,"column":32,"nodeType":"62","messageId":"63","endLine":12,"endColumn":33,"suggestions":"66"},{"ruleId":"60","severity":1,"message":"67","line":12,"column":37,"nodeType":"62","messageId":"63","endLine":12,"endColumn":38,"suggestions":"68"},{"ruleId":"60","severity":1,"message":"65","line":12,"column":51,"nodeType":"62","messageId":"63","endLine":12,"endColumn":52,"suggestions":"69"},"no-native-reassign",["70"],"no-negated-in-lhs",["71"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-unused-vars","'validate' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'callback' and 'isSubmitting'. Either include them or remove the dependency array. If 'callback' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["72"],"'React' is defined but never used.","no-useless-escape","Unnecessary escape character: \\..","Literal","unnecessaryEscape",["73","74"],"Unnecessary escape character: \\-.",["75","76"],"Unnecessary escape character: \\@.",["77","78"],["79","80"],"no-global-assign","no-unsafe-negation",{"desc":"81","fix":"82"},{"messageId":"83","fix":"84","desc":"85"},{"messageId":"86","fix":"87","desc":"88"},{"messageId":"83","fix":"89","desc":"85"},{"messageId":"86","fix":"90","desc":"88"},{"messageId":"83","fix":"91","desc":"85"},{"messageId":"86","fix":"92","desc":"88"},{"messageId":"83","fix":"93","desc":"85"},{"messageId":"86","fix":"94","desc":"88"},"Update the dependencies array to be: [callback, errors, isSubmitting]",{"range":"95","text":"96"},"removeEscape",{"range":"97","text":"98"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"99","text":"100"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"101","text":"98"},{"range":"102","text":"100"},{"range":"103","text":"98"},{"range":"104","text":"100"},{"range":"105","text":"98"},{"range":"106","text":"100"},[772,780],"[callback, errors, isSubmitting]",[262,263],"",[262,262],"\\",[264,265],[264,264],[269,270],[269,269],[283,284],[283,283]]